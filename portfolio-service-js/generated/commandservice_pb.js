// source: commandservice.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.portfolio.Account', null, global);
goog.exportSymbol('proto.portfolio.AccountSecurity', null, global);
goog.exportSymbol('proto.portfolio.AddAccountRequest', null, global);
goog.exportSymbol('proto.portfolio.AddAccountResponse', null, global);
goog.exportSymbol('proto.portfolio.CashAdjustmentRequest', null, global);
goog.exportSymbol('proto.portfolio.CreatePorfolioResponse', null, global);
goog.exportSymbol('proto.portfolio.CreatePortfolioRequest', null, global);
goog.exportSymbol('proto.portfolio.MergeSecurityRequest', null, global);
goog.exportSymbol('proto.portfolio.NextExpectedRevisionResponse', null, global);
goog.exportSymbol('proto.portfolio.PortfolioStateRequest', null, global);
goog.exportSymbol('proto.portfolio.PortfolioStateResponse', null, global);
goog.exportSymbol('proto.portfolio.SecurityAdjustmentRequest', null, global);
goog.exportSymbol('proto.portfolio.SecurityCashAdjustmentRequest', null, global);
goog.exportSymbol('proto.portfolio.SpinOffSecurityRequest', null, global);
goog.exportSymbol('proto.portfolio.UpdateAccountRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.CreatePortfolioRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.CreatePortfolioRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.CreatePortfolioRequest.displayName = 'proto.portfolio.CreatePortfolioRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.CreatePorfolioResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.CreatePorfolioResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.CreatePorfolioResponse.displayName = 'proto.portfolio.CreatePorfolioResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.AddAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.AddAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.AddAccountRequest.displayName = 'proto.portfolio.AddAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.AddAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.AddAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.AddAccountResponse.displayName = 'proto.portfolio.AddAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.UpdateAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.UpdateAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.UpdateAccountRequest.displayName = 'proto.portfolio.UpdateAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.NextExpectedRevisionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.NextExpectedRevisionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.NextExpectedRevisionResponse.displayName = 'proto.portfolio.NextExpectedRevisionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.CashAdjustmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.CashAdjustmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.CashAdjustmentRequest.displayName = 'proto.portfolio.CashAdjustmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.SecurityCashAdjustmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.SecurityCashAdjustmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.SecurityCashAdjustmentRequest.displayName = 'proto.portfolio.SecurityCashAdjustmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.SecurityAdjustmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.SecurityAdjustmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.SecurityAdjustmentRequest.displayName = 'proto.portfolio.SecurityAdjustmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.MergeSecurityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.MergeSecurityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.MergeSecurityRequest.displayName = 'proto.portfolio.MergeSecurityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.SpinOffSecurityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.SpinOffSecurityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.SpinOffSecurityRequest.displayName = 'proto.portfolio.SpinOffSecurityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.PortfolioStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.PortfolioStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.PortfolioStateRequest.displayName = 'proto.portfolio.PortfolioStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.PortfolioStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.portfolio.PortfolioStateResponse.repeatedFields_, null);
};
goog.inherits(proto.portfolio.PortfolioStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.PortfolioStateResponse.displayName = 'proto.portfolio.PortfolioStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.portfolio.Account.repeatedFields_, null);
};
goog.inherits(proto.portfolio.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.Account.displayName = 'proto.portfolio.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portfolio.AccountSecurity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portfolio.AccountSecurity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portfolio.AccountSecurity.displayName = 'proto.portfolio.AccountSecurity';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.CreatePortfolioRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.CreatePortfolioRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.CreatePortfolioRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CreatePortfolioRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.CreatePortfolioRequest}
 */
proto.portfolio.CreatePortfolioRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.CreatePortfolioRequest;
  return proto.portfolio.CreatePortfolioRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.CreatePortfolioRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.CreatePortfolioRequest}
 */
proto.portfolio.CreatePortfolioRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.CreatePortfolioRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.CreatePortfolioRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.CreatePortfolioRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CreatePortfolioRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.CreatePorfolioResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.CreatePorfolioResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.CreatePorfolioResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CreatePorfolioResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nextexpectedrevision: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.CreatePorfolioResponse}
 */
proto.portfolio.CreatePorfolioResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.CreatePorfolioResponse;
  return proto.portfolio.CreatePorfolioResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.CreatePorfolioResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.CreatePorfolioResponse}
 */
proto.portfolio.CreatePorfolioResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextexpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.CreatePorfolioResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.CreatePorfolioResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.CreatePorfolioResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CreatePorfolioResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNextexpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.CreatePorfolioResponse.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CreatePorfolioResponse} returns this
 */
proto.portfolio.CreatePorfolioResponse.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string nextExpectedRevision = 2;
 * @return {string}
 */
proto.portfolio.CreatePorfolioResponse.prototype.getNextexpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CreatePorfolioResponse} returns this
 */
proto.portfolio.CreatePorfolioResponse.prototype.setNextexpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.AddAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.AddAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.AddAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AddAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.AddAccountRequest}
 */
proto.portfolio.AddAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.AddAccountRequest;
  return proto.portfolio.AddAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.AddAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.AddAccountRequest}
 */
proto.portfolio.AddAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.AddAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.AddAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.AddAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AddAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.AddAccountRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AddAccountRequest} returns this
 */
proto.portfolio.AddAccountRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountNumber = 2;
 * @return {string}
 */
proto.portfolio.AddAccountRequest.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AddAccountRequest} returns this
 */
proto.portfolio.AddAccountRequest.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string expectedRevision = 3;
 * @return {string}
 */
proto.portfolio.AddAccountRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AddAccountRequest} returns this
 */
proto.portfolio.AddAccountRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.AddAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.AddAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.AddAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AddAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nextexpectedrevision: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.AddAccountResponse}
 */
proto.portfolio.AddAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.AddAccountResponse;
  return proto.portfolio.AddAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.AddAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.AddAccountResponse}
 */
proto.portfolio.AddAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextexpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.AddAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.AddAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.AddAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AddAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNextexpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string accountId = 1;
 * @return {string}
 */
proto.portfolio.AddAccountResponse.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AddAccountResponse} returns this
 */
proto.portfolio.AddAccountResponse.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string nextExpectedRevision = 2;
 * @return {string}
 */
proto.portfolio.AddAccountResponse.prototype.getNextexpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AddAccountResponse} returns this
 */
proto.portfolio.AddAccountResponse.prototype.setNextexpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.UpdateAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.UpdateAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.UpdateAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.UpdateAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.UpdateAccountRequest}
 */
proto.portfolio.UpdateAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.UpdateAccountRequest;
  return proto.portfolio.UpdateAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.UpdateAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.UpdateAccountRequest}
 */
proto.portfolio.UpdateAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.UpdateAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.UpdateAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.UpdateAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.UpdateAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.UpdateAccountRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.UpdateAccountRequest} returns this
 */
proto.portfolio.UpdateAccountRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.UpdateAccountRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.UpdateAccountRequest} returns this
 */
proto.portfolio.UpdateAccountRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string accountNumber = 3;
 * @return {string}
 */
proto.portfolio.UpdateAccountRequest.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.UpdateAccountRequest} returns this
 */
proto.portfolio.UpdateAccountRequest.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string expectedRevision = 4;
 * @return {string}
 */
proto.portfolio.UpdateAccountRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.UpdateAccountRequest} returns this
 */
proto.portfolio.UpdateAccountRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.NextExpectedRevisionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.NextExpectedRevisionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.NextExpectedRevisionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.NextExpectedRevisionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextexpectedrevision: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.NextExpectedRevisionResponse}
 */
proto.portfolio.NextExpectedRevisionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.NextExpectedRevisionResponse;
  return proto.portfolio.NextExpectedRevisionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.NextExpectedRevisionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.NextExpectedRevisionResponse}
 */
proto.portfolio.NextExpectedRevisionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextexpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.NextExpectedRevisionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.NextExpectedRevisionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.NextExpectedRevisionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.NextExpectedRevisionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextexpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string nextExpectedRevision = 1;
 * @return {string}
 */
proto.portfolio.NextExpectedRevisionResponse.prototype.getNextexpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.NextExpectedRevisionResponse} returns this
 */
proto.portfolio.NextExpectedRevisionResponse.prototype.setNextexpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.CashAdjustmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.CashAdjustmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.CashAdjustmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CashAdjustmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cashadjustment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    settlementdate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.CashAdjustmentRequest}
 */
proto.portfolio.CashAdjustmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.CashAdjustmentRequest;
  return proto.portfolio.CashAdjustmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.CashAdjustmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.CashAdjustmentRequest}
 */
proto.portfolio.CashAdjustmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashadjustment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementdate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.CashAdjustmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.CashAdjustmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.CashAdjustmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.CashAdjustmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCashadjustment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSettlementdate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.CashAdjustmentRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CashAdjustmentRequest} returns this
 */
proto.portfolio.CashAdjustmentRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.CashAdjustmentRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CashAdjustmentRequest} returns this
 */
proto.portfolio.CashAdjustmentRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cashAdjustment = 3;
 * @return {string}
 */
proto.portfolio.CashAdjustmentRequest.prototype.getCashadjustment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CashAdjustmentRequest} returns this
 */
proto.portfolio.CashAdjustmentRequest.prototype.setCashadjustment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string settlementDate = 4;
 * @return {string}
 */
proto.portfolio.CashAdjustmentRequest.prototype.getSettlementdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CashAdjustmentRequest} returns this
 */
proto.portfolio.CashAdjustmentRequest.prototype.setSettlementdate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string expectedRevision = 5;
 * @return {string}
 */
proto.portfolio.CashAdjustmentRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.CashAdjustmentRequest} returns this
 */
proto.portfolio.CashAdjustmentRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.SecurityCashAdjustmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.SecurityCashAdjustmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SecurityCashAdjustmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    securityid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cashadjustment: jspb.Message.getFieldWithDefault(msg, 4, ""),
    commission: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fee: jspb.Message.getFieldWithDefault(msg, 6, ""),
    quantityadjustment: jspb.Message.getFieldWithDefault(msg, 7, ""),
    settlementdate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest}
 */
proto.portfolio.SecurityCashAdjustmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.SecurityCashAdjustmentRequest;
  return proto.portfolio.SecurityCashAdjustmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.SecurityCashAdjustmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest}
 */
proto.portfolio.SecurityCashAdjustmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashadjustment(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommission(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantityadjustment(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementdate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.SecurityCashAdjustmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.SecurityCashAdjustmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SecurityCashAdjustmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecurityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCashadjustment();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCommission();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuantityadjustment();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSettlementdate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string securityId = 3;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getSecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setSecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cashAdjustment = 4;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getCashadjustment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setCashadjustment = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string commission = 5;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getCommission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setCommission = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string fee = 6;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setFee = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string quantityAdjustment = 7;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getQuantityadjustment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setQuantityadjustment = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string settlementDate = 8;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getSettlementdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setSettlementdate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string expectedRevision = 9;
 * @return {string}
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityCashAdjustmentRequest} returns this
 */
proto.portfolio.SecurityCashAdjustmentRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.SecurityAdjustmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.SecurityAdjustmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SecurityAdjustmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    securityid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantityadjustment: jspb.Message.getFieldWithDefault(msg, 4, ""),
    settlementdate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.SecurityAdjustmentRequest}
 */
proto.portfolio.SecurityAdjustmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.SecurityAdjustmentRequest;
  return proto.portfolio.SecurityAdjustmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.SecurityAdjustmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.SecurityAdjustmentRequest}
 */
proto.portfolio.SecurityAdjustmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantityadjustment(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementdate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.SecurityAdjustmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.SecurityAdjustmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SecurityAdjustmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecurityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantityadjustment();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSettlementdate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string securityId = 3;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getSecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setSecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quantityAdjustment = 4;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getQuantityadjustment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setQuantityadjustment = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string settlementDate = 5;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getSettlementdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setSettlementdate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string expectedRevision = 6;
 * @return {string}
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SecurityAdjustmentRequest} returns this
 */
proto.portfolio.SecurityAdjustmentRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.MergeSecurityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.MergeSecurityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.MergeSecurityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.MergeSecurityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    acquiredsecurityid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    acquiringsecurityid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    acquiredquantity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    acquiringquantity: jspb.Message.getFieldWithDefault(msg, 6, ""),
    settlementdate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.MergeSecurityRequest}
 */
proto.portfolio.MergeSecurityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.MergeSecurityRequest;
  return proto.portfolio.MergeSecurityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.MergeSecurityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.MergeSecurityRequest}
 */
proto.portfolio.MergeSecurityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcquiredsecurityid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcquiringsecurityid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcquiredquantity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcquiringquantity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementdate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.MergeSecurityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.MergeSecurityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.MergeSecurityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.MergeSecurityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAcquiredsecurityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAcquiringsecurityid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAcquiredquantity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAcquiringquantity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSettlementdate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string acquiredSecurityId = 3;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getAcquiredsecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setAcquiredsecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string acquiringSecurityId = 4;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getAcquiringsecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setAcquiringsecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string acquiredQuantity = 5;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getAcquiredquantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setAcquiredquantity = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string acquiringQuantity = 6;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getAcquiringquantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setAcquiringquantity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string settlementDate = 7;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getSettlementdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setSettlementdate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string expectedRevision = 8;
 * @return {string}
 */
proto.portfolio.MergeSecurityRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.MergeSecurityRequest} returns this
 */
proto.portfolio.MergeSecurityRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.SpinOffSecurityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.SpinOffSecurityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SpinOffSecurityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    existingsecurityid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newsecurityid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    newquantity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    settlementdate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expectedrevision: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.SpinOffSecurityRequest}
 */
proto.portfolio.SpinOffSecurityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.SpinOffSecurityRequest;
  return proto.portfolio.SpinOffSecurityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.SpinOffSecurityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.SpinOffSecurityRequest}
 */
proto.portfolio.SpinOffSecurityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExistingsecurityid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewsecurityid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewquantity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementdate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpectedrevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.SpinOffSecurityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.SpinOffSecurityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.SpinOffSecurityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExistingsecurityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNewsecurityid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNewquantity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSettlementdate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpectedrevision();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountId = 2;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string existingSecurityId = 3;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getExistingsecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setExistingsecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string newSecurityId = 4;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getNewsecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setNewsecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string newQuantity = 5;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getNewquantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setNewquantity = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string settlementDate = 6;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getSettlementdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setSettlementdate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string expectedRevision = 7;
 * @return {string}
 */
proto.portfolio.SpinOffSecurityRequest.prototype.getExpectedrevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.SpinOffSecurityRequest} returns this
 */
proto.portfolio.SpinOffSecurityRequest.prototype.setExpectedrevision = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.PortfolioStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.PortfolioStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.PortfolioStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.PortfolioStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.PortfolioStateRequest}
 */
proto.portfolio.PortfolioStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.PortfolioStateRequest;
  return proto.portfolio.PortfolioStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.PortfolioStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.PortfolioStateRequest}
 */
proto.portfolio.PortfolioStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.PortfolioStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.PortfolioStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.PortfolioStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.PortfolioStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.PortfolioStateRequest.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.PortfolioStateRequest} returns this
 */
proto.portfolio.PortfolioStateRequest.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.portfolio.PortfolioStateResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.PortfolioStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.PortfolioStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.PortfolioStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.PortfolioStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    portfolioid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    revisionnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.portfolio.Account.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.PortfolioStateResponse}
 */
proto.portfolio.PortfolioStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.PortfolioStateResponse;
  return proto.portfolio.PortfolioStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.PortfolioStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.PortfolioStateResponse}
 */
proto.portfolio.PortfolioStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortfolioid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevisionnumber(value);
      break;
    case 3:
      var value = new proto.portfolio.Account;
      reader.readMessage(value,proto.portfolio.Account.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.PortfolioStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.PortfolioStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.PortfolioStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.PortfolioStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortfolioid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRevisionnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.portfolio.Account.serializeBinaryToWriter
    );
  }
};


/**
 * optional string portfolioId = 1;
 * @return {string}
 */
proto.portfolio.PortfolioStateResponse.prototype.getPortfolioid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.PortfolioStateResponse} returns this
 */
proto.portfolio.PortfolioStateResponse.prototype.setPortfolioid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string revisionNumber = 2;
 * @return {string}
 */
proto.portfolio.PortfolioStateResponse.prototype.getRevisionnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.PortfolioStateResponse} returns this
 */
proto.portfolio.PortfolioStateResponse.prototype.setRevisionnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Account accounts = 3;
 * @return {!Array<!proto.portfolio.Account>}
 */
proto.portfolio.PortfolioStateResponse.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.portfolio.Account>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.portfolio.Account, 3));
};


/**
 * @param {!Array<!proto.portfolio.Account>} value
 * @return {!proto.portfolio.PortfolioStateResponse} returns this
*/
proto.portfolio.PortfolioStateResponse.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.portfolio.Account=} opt_value
 * @param {number=} opt_index
 * @return {!proto.portfolio.Account}
 */
proto.portfolio.PortfolioStateResponse.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.portfolio.Account, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.portfolio.PortfolioStateResponse} returns this
 */
proto.portfolio.PortfolioStateResponse.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.portfolio.Account.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cashamount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountsecuritiesList: jspb.Message.toObjectList(msg.getAccountsecuritiesList(),
    proto.portfolio.AccountSecurity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.Account}
 */
proto.portfolio.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.Account;
  return proto.portfolio.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.Account}
 */
proto.portfolio.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashamount(value);
      break;
    case 4:
      var value = new proto.portfolio.AccountSecurity;
      reader.readMessage(value,proto.portfolio.AccountSecurity.deserializeBinaryFromReader);
      msg.addAccountsecurities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCashamount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountsecuritiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.portfolio.AccountSecurity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string accountId = 1;
 * @return {string}
 */
proto.portfolio.Account.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.Account} returns this
 */
proto.portfolio.Account.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountNumber = 2;
 * @return {string}
 */
proto.portfolio.Account.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.Account} returns this
 */
proto.portfolio.Account.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cashAmount = 3;
 * @return {string}
 */
proto.portfolio.Account.prototype.getCashamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.Account} returns this
 */
proto.portfolio.Account.prototype.setCashamount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated AccountSecurity accountSecurities = 4;
 * @return {!Array<!proto.portfolio.AccountSecurity>}
 */
proto.portfolio.Account.prototype.getAccountsecuritiesList = function() {
  return /** @type{!Array<!proto.portfolio.AccountSecurity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.portfolio.AccountSecurity, 4));
};


/**
 * @param {!Array<!proto.portfolio.AccountSecurity>} value
 * @return {!proto.portfolio.Account} returns this
*/
proto.portfolio.Account.prototype.setAccountsecuritiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.portfolio.AccountSecurity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.portfolio.AccountSecurity}
 */
proto.portfolio.Account.prototype.addAccountsecurities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.portfolio.AccountSecurity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.portfolio.Account} returns this
 */
proto.portfolio.Account.prototype.clearAccountsecuritiesList = function() {
  return this.setAccountsecuritiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portfolio.AccountSecurity.prototype.toObject = function(opt_includeInstance) {
  return proto.portfolio.AccountSecurity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portfolio.AccountSecurity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AccountSecurity.toObject = function(includeInstance, msg) {
  var f, obj = {
    securityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portfolio.AccountSecurity}
 */
proto.portfolio.AccountSecurity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portfolio.AccountSecurity;
  return proto.portfolio.AccountSecurity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portfolio.AccountSecurity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portfolio.AccountSecurity}
 */
proto.portfolio.AccountSecurity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portfolio.AccountSecurity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portfolio.AccountSecurity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portfolio.AccountSecurity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portfolio.AccountSecurity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string securityId = 1;
 * @return {string}
 */
proto.portfolio.AccountSecurity.prototype.getSecurityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AccountSecurity} returns this
 */
proto.portfolio.AccountSecurity.prototype.setSecurityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string quantity = 2;
 * @return {string}
 */
proto.portfolio.AccountSecurity.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portfolio.AccountSecurity} returns this
 */
proto.portfolio.AccountSecurity.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.portfolio);
