syntax = "proto3";

package portfolio;

service PortfolioService {
    rpc CreatePortfolio (CreatePortfolioRequest) returns (CreatePorfolioResponse) {}
    rpc AddAccount (AddAccountRequest) returns (AddAccountResponse) {}
    rpc UpdateAccount (UpdateAccountRequest) returns (NextExpectedRevisionResponse) {}
    rpc DepositCash (CashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc WithdrawCash (CashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc PayFees (CashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc ReceiveDividend (CashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc BuySecurity (SecurityCashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc SellSecurity (SecurityCashAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc TransferSecurityIn (SecurityAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc TransferSecurityOut (SecurityAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc SplitSecurity (SecurityAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc ConsolidateSecurity (SecurityAdjustmentRequest) returns (NextExpectedRevisionResponse) {}
    rpc MergeSecurity (MergeSecurityRequest) returns (NextExpectedRevisionResponse) {}
    rpc SpinOffSecurity (SpinOffSecurityRequest) returns (NextExpectedRevisionResponse) {}
    rpc GetPortfolioState (PortfolioStateRequest) returns (PortfolioStateResponse) {}
}

message CreatePortfolioRequest {}
message CreatePorfolioResponse {
    string portfolioId = 1;
    string nextExpectedRevision = 2;
}

message AddAccountRequest {
    string portfolioId = 1;
    string accountNumber = 2;
    string expectedRevision = 3;
}
message AddAccountResponse {
    string accountId = 1;
    string nextExpectedRevision = 2;
}

message UpdateAccountRequest {
    string portfolioId = 1;
    string accountId = 2;
    string accountNumber = 3;
    string expectedRevision = 4;
}

message NextExpectedRevisionResponse {
    string nextExpectedRevision = 1;
}
message CashAdjustmentRequest {
    string portfolioId = 1;
    string accountId = 2;
    string cashAdjustment = 3;
    string settlementDate = 4;
    string expectedRevision = 5;
}

message SecurityCashAdjustmentRequest {
    string portfolioId = 1;
    string accountId = 2;
    string securityId = 3;
    string cashAdjustment = 4;
    string commission = 5;
    string fee = 6;
    string quantityAdjustment = 7;
    string settlementDate = 8;
    string expectedRevision = 9;
}

message SecurityAdjustmentRequest {
    string portfolioId = 1;
    string accountId = 2;
    string securityId = 3;
    string quantityAdjustment = 4;
    string settlementDate = 5;
    string expectedRevision = 6;
}

message MergeSecurityRequest {
    string portfolioId = 1;
    string accountId = 2;
    string acquiredSecurityId = 3;
    string acquiringSecurityId = 4;
    string acquiredQuantity = 5;
    string acquiringQuantity = 6;
    string settlementDate = 7;
    string expectedRevision = 8;
}

message SpinOffSecurityRequest {
    string portfolioId = 1;
    string accountId = 2;
    string existingSecurityId = 3;
    string newSecurityId = 4;
    string newQuantity = 5;
    string settlementDate = 6;
    string expectedRevision = 7;
}

message PortfolioStateRequest {
    string portfolioId = 1;
}

message PortfolioStateResponse {
    string portfolioId = 1;
    string revisionNumber = 2;
    repeated Account accounts = 3;
}

message Account {
    string accountId = 1;
    string accountNumber = 2;
    string cashAmount = 3;
    repeated AccountSecurity accountSecurities = 4;
}

message AccountSecurity {
    string securityId = 1;
    string quantity = 2;
}